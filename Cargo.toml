# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
name = "minifb-termux"
version = "0.27.0"
authors = ["Daniel Collin <daniel@collin.com>"]
build = "build.rs"
exclude = ["examples/resources/"]
description = "Cross-platform window setup with optional bitmap rendering"
documentation = "https://docs.rs/minifb/0.15/minifb"
readme = "README.md"
keywords = [
    "windowing",
    "window",
    "framebuffer",
]
categories = ["rendering"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/emoon/rust_minifb"

[dependencies.raw-window-handle]
version = "0.6"

[dev-dependencies.png]
version = "0.17"

[build-dependencies.cc]
version = "1.0"

[features]
default = [
    # "wayland",
    "x11",
    # "dlopen",
]
dlopen = ["wayland-client/dlopen"]
wayland = [
    "dlib",
    "lazy_static",
    "libc",
    "tempfile",
    "wayland-client",
    "wayland-cursor",
    "wayland-protocols",
]
web = [
    "wasm-bindgen",
    "web-sys",
    "instant/wasm-bindgen",
    "instant/inaccurate",
]
x11 = [
    "x11-dl",
    "libc",
]

[target."cfg(not(any(target_os = \"macos\", target_os = \"redox\", windows)))".dependencies.dlib]
version = "0.5"
optional = true

[target."cfg(not(any(target_os = \"macos\", target_os = \"redox\", windows)))".dependencies.lazy_static]
version = "1.0"
optional = true

[target."cfg(not(any(target_os = \"macos\", target_os = \"redox\", windows)))".dependencies.libc]
version = "0.2.107"
optional = true

[target."cfg(not(any(target_os = \"macos\", target_os = \"redox\", windows)))".dependencies.tempfile]
version = "3.3"
optional = true

[target."cfg(not(any(target_os = \"macos\", target_os = \"redox\", windows)))".dependencies.wayland-client]
version = "0.29"
optional = true

[target."cfg(not(any(target_os = \"macos\", target_os = \"redox\", windows)))".dependencies.wayland-cursor]
version = "0.29"
optional = true

[target."cfg(not(any(target_os = \"macos\", target_os = \"redox\", windows)))".dependencies.wayland-protocols]
version = "0.29"
features = [
    "client",
    "unstable_protocols",
]
optional = true

[target."cfg(not(any(target_os = \"macos\", target_os = \"redox\", windows)))".dependencies.x11-dl]
version = "2.19.1"
optional = true

[target."cfg(target_arch = \"wasm32\")".dependencies.futures]
version = "0.3.12"

[target."cfg(target_arch = \"wasm32\")".dependencies.instant]
version = "0.1.12"
features = [
    "wasm-bindgen",
    "inaccurate",
]

[target."cfg(target_arch = \"wasm32\")".dependencies.js-sys]
version = "0.3.56"

[target."cfg(target_arch = \"wasm32\")".dependencies.serde]
version = "1.0.136"
features = ["derive"]

[target."cfg(target_arch = \"wasm32\")".dependencies.serde_derive]
version = "1.0.123"

[target."cfg(target_arch = \"wasm32\")".dependencies.wasm-bindgen]
version = "0.2.79"
features = ["serde-serialize"]
optional = true

[target."cfg(target_arch = \"wasm32\")".dependencies.wasm-bindgen-futures]
version = "0.4.29"

[target."cfg(target_arch = \"wasm32\")".dependencies.web-sys]
version = "0.3.56"
features = [
    "console",
    "Window",
    "Document",
    "Navigator",
    "Element",
    "Node",
    "ImageData",
    "HtmlCanvasElement",
    "HtmlImageElement",
    "CanvasRenderingContext2d",
    "Headers",
    "Request",
    "RequestInit",
    "RequestMode",
    "Response",
    "Blob",
    "Url",
    "Gamepad",
    "GamepadButton",
    "GamepadEvent",
    "MouseEvent",
    "KeyboardEvent",
]
optional = true

[target."cfg(windows)".dependencies.winapi]
version = "0.3.9"
features = [
    "winuser",
    "wingdi",
    "libloaderapi",
    "errhandlingapi",
    "fileapi",
]

[target.x86_64-unknown-redox.dependencies.orbclient]
version = "0.3.20"

[badges.maintenance]
status = "actively-developed"
